/*
 * This file is generated by jOOQ.
 */
package com.scomarlf.generated.tables.records;


import com.scomarlf.generated.tables.Record;
import com.scomarlf.generated.tables.interfaces.IRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordRecord extends UpdatableRecordImpl<RecordRecord> implements Record15<Long, String, String, String, String, Long, String, String, String, Long, Boolean, LocalDateTime, Long, LocalDateTime, Long>, IRecord {

    private static final long serialVersionUID = -191423647;

    /**
     * Setter for <code>indexBot.record.id</code>. 频道\群组\机器人 ID
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>indexBot.record.id</code>. 频道\群组\机器人 ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>indexBot.record.username</code>. 频道\群组\机器人 username
     */
    @Override
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>indexBot.record.username</code>. 频道\群组\机器人 username
     */
    @Override
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>indexBot.record.inviteLink</code>. 私有链接
     */
    @Override
    public void setInvitelink(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>indexBot.record.inviteLink</code>. 私有链接
     */
    @Override
    public String getInvitelink() {
        return (String) get(2);
    }

    /**
     * Setter for <code>indexBot.record.title</code>. 名称
     */
    @Override
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>indexBot.record.title</code>. 名称
     */
    @Override
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>indexBot.record.remark</code>. 简介
     */
    @Override
    public void setRemark(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>indexBot.record.remark</code>. 简介
     */
    @Override
    public String getRemark() {
        return (String) get(4);
    }

    /**
     * Setter for <code>indexBot.record.memberNumber</code>. 成员数量
     */
    @Override
    public void setMembernumber(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>indexBot.record.memberNumber</code>. 成员数量
     */
    @Override
    public Long getMembernumber() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>indexBot.record.tag</code>. 标签
     */
    @Override
    public void setTag(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>indexBot.record.tag</code>. 标签
     */
    @Override
    public String getTag() {
        return (String) get(6);
    }

    /**
     * Setter for <code>indexBot.record.type</code>. 收录类型 字典-recordType   频道\群组\机器人
     */
    @Override
    public void setType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>indexBot.record.type</code>. 收录类型 字典-recordType   频道\群组\机器人
     */
    @Override
    public String getType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>indexBot.record.classification</code>. 分类
     */
    @Override
    public void setClassification(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>indexBot.record.classification</code>. 分类
     */
    @Override
    public String getClassification() {
        return (String) get(8);
    }

    /**
     * Setter for <code>indexBot.record.placardId</code>. 公告ID
     */
    @Override
    public void setPlacardid(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>indexBot.record.placardId</code>. 公告ID
     */
    @Override
    public Long getPlacardid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>indexBot.record.status</code>. 是否展示
     */
    @Override
    public void setStatus(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>indexBot.record.status</code>. 是否展示
     */
    @Override
    public Boolean getStatus() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>indexBot.record.createTime</code>. 创建时间
     */
    @Override
    public void setCreatetime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>indexBot.record.createTime</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreatetime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>indexBot.record.createUser</code>. 提交收录申请用户
     */
    @Override
    public void setCreateuser(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>indexBot.record.createUser</code>. 提交收录申请用户
     */
    @Override
    public Long getCreateuser() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>indexBot.record.updateTime</code>. 更新时间
     */
    @Override
    public void setUpdatetime(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>indexBot.record.updateTime</code>. 更新时间
     */
    @Override
    public LocalDateTime getUpdatetime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>indexBot.record.updateUser</code>. 修改用户
     */
    @Override
    public void setUpdateuser(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>indexBot.record.updateUser</code>. 修改用户
     */
    @Override
    public Long getUpdateuser() {
        return (Long) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, String, String, String, String, Long, String, String, String, Long, Boolean, LocalDateTime, Long, LocalDateTime, Long> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Long, String, String, String, String, Long, String, String, String, Long, Boolean, LocalDateTime, Long, LocalDateTime, Long> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Record.RECORD.ID;
    }

    @Override
    public Field<String> field2() {
        return Record.RECORD.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Record.RECORD.INVITELINK;
    }

    @Override
    public Field<String> field4() {
        return Record.RECORD.TITLE;
    }

    @Override
    public Field<String> field5() {
        return Record.RECORD.REMARK;
    }

    @Override
    public Field<Long> field6() {
        return Record.RECORD.MEMBERNUMBER;
    }

    @Override
    public Field<String> field7() {
        return Record.RECORD.TAG;
    }

    @Override
    public Field<String> field8() {
        return Record.RECORD.TYPE;
    }

    @Override
    public Field<String> field9() {
        return Record.RECORD.CLASSIFICATION;
    }

    @Override
    public Field<Long> field10() {
        return Record.RECORD.PLACARDID;
    }

    @Override
    public Field<Boolean> field11() {
        return Record.RECORD.STATUS;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Record.RECORD.CREATETIME;
    }

    @Override
    public Field<Long> field13() {
        return Record.RECORD.CREATEUSER;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Record.RECORD.UPDATETIME;
    }

    @Override
    public Field<Long> field15() {
        return Record.RECORD.UPDATEUSER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getInvitelink();
    }

    @Override
    public String component4() {
        return getTitle();
    }

    @Override
    public String component5() {
        return getRemark();
    }

    @Override
    public Long component6() {
        return getMembernumber();
    }

    @Override
    public String component7() {
        return getTag();
    }

    @Override
    public String component8() {
        return getType();
    }

    @Override
    public String component9() {
        return getClassification();
    }

    @Override
    public Long component10() {
        return getPlacardid();
    }

    @Override
    public Boolean component11() {
        return getStatus();
    }

    @Override
    public LocalDateTime component12() {
        return getCreatetime();
    }

    @Override
    public Long component13() {
        return getCreateuser();
    }

    @Override
    public LocalDateTime component14() {
        return getUpdatetime();
    }

    @Override
    public Long component15() {
        return getUpdateuser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getInvitelink();
    }

    @Override
    public String value4() {
        return getTitle();
    }

    @Override
    public String value5() {
        return getRemark();
    }

    @Override
    public Long value6() {
        return getMembernumber();
    }

    @Override
    public String value7() {
        return getTag();
    }

    @Override
    public String value8() {
        return getType();
    }

    @Override
    public String value9() {
        return getClassification();
    }

    @Override
    public Long value10() {
        return getPlacardid();
    }

    @Override
    public Boolean value11() {
        return getStatus();
    }

    @Override
    public LocalDateTime value12() {
        return getCreatetime();
    }

    @Override
    public Long value13() {
        return getCreateuser();
    }

    @Override
    public LocalDateTime value14() {
        return getUpdatetime();
    }

    @Override
    public Long value15() {
        return getUpdateuser();
    }

    @Override
    public RecordRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RecordRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public RecordRecord value3(String value) {
        setInvitelink(value);
        return this;
    }

    @Override
    public RecordRecord value4(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public RecordRecord value5(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public RecordRecord value6(Long value) {
        setMembernumber(value);
        return this;
    }

    @Override
    public RecordRecord value7(String value) {
        setTag(value);
        return this;
    }

    @Override
    public RecordRecord value8(String value) {
        setType(value);
        return this;
    }

    @Override
    public RecordRecord value9(String value) {
        setClassification(value);
        return this;
    }

    @Override
    public RecordRecord value10(Long value) {
        setPlacardid(value);
        return this;
    }

    @Override
    public RecordRecord value11(Boolean value) {
        setStatus(value);
        return this;
    }

    @Override
    public RecordRecord value12(LocalDateTime value) {
        setCreatetime(value);
        return this;
    }

    @Override
    public RecordRecord value13(Long value) {
        setCreateuser(value);
        return this;
    }

    @Override
    public RecordRecord value14(LocalDateTime value) {
        setUpdatetime(value);
        return this;
    }

    @Override
    public RecordRecord value15(Long value) {
        setUpdateuser(value);
        return this;
    }

    @Override
    public RecordRecord values(Long value1, String value2, String value3, String value4, String value5, Long value6, String value7, String value8, String value9, Long value10, Boolean value11, LocalDateTime value12, Long value13, LocalDateTime value14, Long value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRecord from) {
        setId(from.getId());
        setUsername(from.getUsername());
        setInvitelink(from.getInvitelink());
        setTitle(from.getTitle());
        setRemark(from.getRemark());
        setMembernumber(from.getMembernumber());
        setTag(from.getTag());
        setType(from.getType());
        setClassification(from.getClassification());
        setPlacardid(from.getPlacardid());
        setStatus(from.getStatus());
        setCreatetime(from.getCreatetime());
        setCreateuser(from.getCreateuser());
        setUpdatetime(from.getUpdatetime());
        setUpdateuser(from.getUpdateuser());
    }

    @Override
    public <E extends IRecord> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecordRecord
     */
    public RecordRecord() {
        super(Record.RECORD);
    }

    /**
     * Create a detached, initialised RecordRecord
     */
    public RecordRecord(Long id, String username, String invitelink, String title, String remark, Long membernumber, String tag, String type, String classification, Long placardid, Boolean status, LocalDateTime createtime, Long createuser, LocalDateTime updatetime, Long updateuser) {
        super(Record.RECORD);

        set(0, id);
        set(1, username);
        set(2, invitelink);
        set(3, title);
        set(4, remark);
        set(5, membernumber);
        set(6, tag);
        set(7, type);
        set(8, classification);
        set(9, placardid);
        set(10, status);
        set(11, createtime);
        set(12, createuser);
        set(13, updatetime);
        set(14, updateuser);
    }
}
