/*
 * This file is generated by jOOQ.
 */
package com.scomarlf.generated.tables.daos;


import com.scomarlf.generated.tables.Record;
import com.scomarlf.generated.tables.records.RecordRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordDao extends DAOImpl<RecordRecord, com.scomarlf.generated.tables.pojos.Record, Long> {

    /**
     * Create a new RecordDao without any configuration
     */
    public RecordDao() {
        super(Record.RECORD, com.scomarlf.generated.tables.pojos.Record.class);
    }

    /**
     * Create a new RecordDao with an attached configuration
     */
    public RecordDao(Configuration configuration) {
        super(Record.RECORD, com.scomarlf.generated.tables.pojos.Record.class, configuration);
    }

    @Override
    public Long getId(com.scomarlf.generated.tables.pojos.Record object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Record.RECORD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchById(Long... values) {
        return fetch(Record.RECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.scomarlf.generated.tables.pojos.Record fetchOneById(Long value) {
        return fetchOne(Record.RECORD.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByUsername(String... values) {
        return fetch(Record.RECORD.USERNAME, values);
    }

    /**
     * Fetch records that have <code>inviteLink BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfInvitelink(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.INVITELINK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inviteLink IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByInvitelink(String... values) {
        return fetch(Record.RECORD.INVITELINK, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByTitle(String... values) {
        return fetch(Record.RECORD.TITLE, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByRemark(String... values) {
        return fetch(Record.RECORD.REMARK, values);
    }

    /**
     * Fetch records that have <code>memberNumber BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfMembernumber(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Record.RECORD.MEMBERNUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>memberNumber IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByMembernumber(Long... values) {
        return fetch(Record.RECORD.MEMBERNUMBER, values);
    }

    /**
     * Fetch records that have <code>tag BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfTag(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.TAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByTag(String... values) {
        return fetch(Record.RECORD.TAG, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByType(String... values) {
        return fetch(Record.RECORD.TYPE, values);
    }

    /**
     * Fetch records that have <code>classification BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfClassification(String lowerInclusive, String upperInclusive) {
        return fetchRange(Record.RECORD.CLASSIFICATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>classification IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByClassification(String... values) {
        return fetch(Record.RECORD.CLASSIFICATION, values);
    }

    /**
     * Fetch records that have <code>placardId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfPlacardid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Record.RECORD.PLACARDID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>placardId IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByPlacardid(Long... values) {
        return fetch(Record.RECORD.PLACARDID, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfStatus(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Record.RECORD.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByStatus(Boolean... values) {
        return fetch(Record.RECORD.STATUS, values);
    }

    /**
     * Fetch records that have <code>createTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfCreatetime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Record.RECORD.CREATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createTime IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByCreatetime(LocalDateTime... values) {
        return fetch(Record.RECORD.CREATETIME, values);
    }

    /**
     * Fetch records that have <code>createUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfCreateuser(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Record.RECORD.CREATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createUser IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByCreateuser(Long... values) {
        return fetch(Record.RECORD.CREATEUSER, values);
    }

    /**
     * Fetch records that have <code>updateTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfUpdatetime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Record.RECORD.UPDATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateTime IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByUpdatetime(LocalDateTime... values) {
        return fetch(Record.RECORD.UPDATETIME, values);
    }

    /**
     * Fetch records that have <code>updateUser BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchRangeOfUpdateuser(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Record.RECORD.UPDATEUSER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updateUser IN (values)</code>
     */
    public List<com.scomarlf.generated.tables.pojos.Record> fetchByUpdateuser(Long... values) {
        return fetch(Record.RECORD.UPDATEUSER, values);
    }
}
